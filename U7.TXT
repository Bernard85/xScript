self-submit job(U7);

monitor;
  DLTSRVPGM SRVPGM(U7);
  DLTBNDDIR BNDDIR(U7);
end-monitor;

// Compile all modules
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7ENV);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7FILE);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7FILTER);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7FMT);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7FORM);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7GRID);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7IFS);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7INDEX);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7INT);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7JRN);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7MSG);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7SCREEN);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7STAT);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7TREE);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7XML);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7XVIEW);
CRTRPGMOD SRCFILE(SRC) MODULE(qtemp/U7YVIEW);

// Retrieve Binder Source
///RTVBNDSRC MODULE(U7*) SRCFILE(bnd) SRCMBR(U7);
///create or replace alias qtemp/U7 for bnd(U7);
///update U7
///set srcdta=trim(srcdta)!!' SIGNATURE("CHIKO")'
///where srcdta like '%STRPGMEXP%';

// Create Service Program itself
CRTSRVPGM SRVPGM(U7) MODULE(QTEMP/U7*) EXPORT(*ALL);

// Create bound directory
CRTBNDDIR BNDDIR(U7);
addbnddire bnddir(U7) obj((U7 *srvpgm));
